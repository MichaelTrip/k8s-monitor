apiVersion: v1
kind: Template
metadata:
  name: k8s-monitor-template
  annotations:
    description: "Template for deploying K8s Monitor application"
    tags: "monitoring,kubernetes,go"
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: k8s-monitor
    labels:
      app: k8s-monitor
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: k8s-monitor
    template:
      metadata:
        labels:
          app: k8s-monitor
      spec:
        serviceAccountName: k8s-monitor
        containers:
        - name: k8s-monitor
          image: ${IMAGE_NAME}:${IMAGE_TAG}
          ports:
          - containerPort: 8080
            protocol: TCP
          env:
          - name: WEB_PORT
            value: "8080"
          - name: PERSISTENCE_FILE_PATH
            value: "/app/data/changes.json"
          - name: HOME
            value: "/home/k8s-monitor"
          volumeMounts:
          - name: data-volume
            mountPath: /app/data
          - name: config-volume
            mountPath: /app/config.json
            subPath: config.json
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1001
            readOnlyRootFilesystem: true
            capabilities:
              drop:
              - ALL
        volumes:
        - name: data-volume
          emptyDir: {}
        - name: config-volume
          configMap:
            name: k8s-monitor-config
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          fsGroup: 0
- apiVersion: v1
  kind: Service
  metadata:
    name: k8s-monitor
    labels:
      app: k8s-monitor
  spec:
    selector:
      app: k8s-monitor
    ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: k8s-monitor
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: k8s-monitor
  rules:
  - apiGroups: [""]
    resources: ["pods", "services", "configmaps", "secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions", "networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch"]
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: k8s-monitor
  subjects:
  - kind: ServiceAccount
    name: k8s-monitor
    namespace: ${NAMESPACE}
  roleRef:
    kind: ClusterRole
    name: k8s-monitor
    apiGroup: rbac.authorization.k8s.io
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: k8s-monitor-config
  data:
    config.json: |
      {
        "webPort": 8080,
        "persistence": {
          "enabled": true,
          "filePath": "/app/data/changes.json",
          "autoSave": true,
          "saveInterval": 30
        },
        "resources": [
          {
            "name": "pods",
            "enabled": true,
            "description": "Kubernetes Pods"
          },
          {
            "name": "deployments",
            "enabled": true,
            "description": "Kubernetes Deployments"
          },
          {
            "name": "services",
            "enabled": true,
            "description": "Kubernetes Services"
          },
          {
            "name": "configmaps",
            "enabled": true,
            "description": "Kubernetes ConfigMaps"
          },
          {
            "name": "secrets",
            "enabled": true,
            "description": "Kubernetes Secrets"
          }
        ]
      }
parameters:
- name: IMAGE_NAME
  description: "Name of the container image"
  value: "k8s-monitor"
  required: true
- name: IMAGE_TAG
  description: "Tag of the container image"
  value: "latest"
  required: true
- name: NAMESPACE
  description: "Namespace to deploy the application"
  value: "default"
  required: true
